{
    "openapi": "3.0.0",
    "info": {
        "title": "Foremost ApplicationAPI",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Create User"
                ],
                "summary": "User Register",
                "description": "Add new user to the system",
                "operationId": "CreateUser",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "firstname": {
                                        "type": "text"
                                    },
                                    "lastname": {
                                        "type": "text"
                                    },
                                    "email": {
                                        "type": "email"
                                    },
                                    "password": {
                                        "type": "password"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Register Successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "User Created Successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Error page",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "User Login",
                "description": "Login Existing User",
                "operationId": "authLogin",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "email"
                                    },
                                    "password": {
                                        "type": "password"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Login Successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "Login Successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Logout"
                ],
                "summary": "Logout user",
                "description": "User must be logged in to get to this route",
                "operationId": "authLogout",
                "responses": {
                    "200": {
                        "description": "User logged out"
                    }
                }
            }
        },
        "/auth/google": {
            "get": {
                "tags": [
                    "Google OAuth"
                ],
                "summary": "Google sign up/in",
                "description": "Takes you to the google signin page",
                "operationId": "GoogleOAuth",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Takes user to google signin with mail page"
                    }
                }
            }
        },
        "/callback/google": {
            "get": {
                "tags": [
                    "Handle Google callback"
                ],
                "summary": "This handles the callback from google and pushes the user details to the system",
                "description": "Google OAuth to either login or register a user in the system via their, you don't have to paas in any parameter as this is already being automated from the backend",
                "operationId": "Google callback",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "email",
                                    "social_id",
                                    "social_type",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "email"
                                    },
                                    "firstname": {
                                        "type": "text"
                                    },
                                    "lastname": {
                                        "type": "text"
                                    },
                                    "social_id": {
                                        "type": "integer"
                                    },
                                    "social_type": {
                                        "type": "text"
                                    },
                                    "password": {
                                        "type": "password"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Either logged in or signed in Successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error occured with error message"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/cart-items": {
            "post": {
                "tags": [
                    "Cart list"
                ],
                "summary": "Cart items",
                "description": "List all the products someone have added his cart. Does not store these details in the DB, rather it stores it on the users browser",
                "operationId": "cartList",
                "responses": {
                    "200": {
                        "description": "Returns all products a user currently have in their cart",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "error: Error message",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/add-to-cart": {
            "post": {
                "tags": [
                    "Add to cart"
                ],
                "summary": "Add a product to cart",
                "description": "Add a product to cart. Product id needs to be passed",
                "operationId": "addToCart",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "name",
                                    "price",
                                    "quantity"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "text"
                                    },
                                    "price": {
                                        "type": "number"
                                    },
                                    "quantity": {
                                        "type": "number"
                                    },
                                    "imagedirectory": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product added to cart successfully!",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to add to cart: Error message",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/update-cart/[id]": {
            "post": {
                "tags": [
                    "Update cart"
                ],
                "summary": "Update a product in the cart",
                "description": "To update a product in the cart, you need to pass the product_id. [For the user]",
                "operationId": "updateCart",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "price",
                                    "quantity"
                                ],
                                "properties": {
                                    "price": {
                                        "type": "number"
                                    },
                                    "quantity": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product cart is updated successfully!",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "important field missing: error with field names",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to update cart: Error message",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/remove-item/[id]": {
            "post": {
                "tags": [
                    "Remove cart"
                ],
                "summary": "Remove an existing product from the cart",
                "description": "User removes a previously added product from his cart, you need to pass the product_id. [For the user]",
                "operationId": "removeCart",
                "responses": {
                    "200": {
                        "description": "Product removed from cart",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to remove product from cart: Error message",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/clear-cart": {
            "post": {
                "tags": [
                    "Clear buyer cart"
                ],
                "summary": "Remove all existing product from buyer cart",
                "description": "Remove / clear all the product a user previously added to his cart. [For the user]",
                "operationId": "clearAllCart",
                "responses": {
                    "200": {
                        "description": "Cart cleared!",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to clear cart: Error message",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/product-list": {
            "post": {
                "tags": [
                    "Get All Products"
                ],
                "summary": "Show all products and then paginate",
                "description": "Show all products and then paginate by 12 per request",
                "operationId": "getAllProducts",
                "responses": {
                    "200": {
                        "description": "Product details",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Error page",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/product-details-show/[product:id]": {
            "post": {
                "tags": [
                    "Get product by id"
                ],
                "summary": "Show product detail",
                "description": "Get the detail of a particular product. Comes with product price and features. Product ID must be passed in the url. [For the admin]",
                "operationId": "getProductById",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product details",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Error page",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/product-category/[product:category]": {
            "post": {
                "tags": [
                    "Get product by category"
                ],
                "summary": "Get product by category",
                "description": "Gets all products under the requested category. Product ID must be passed in the url. [For the admin]",
                "operationId": "getProductByCategory",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "category": {
                                        "type": "text"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns product list under the selected category",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Error page",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/store-product": {
            "post": {
                "tags": [
                    "Store product"
                ],
                "summary": "Add a new product to the system",
                "description": "Add a new product to the system. The product price, features and images are also added. [For the admin]",
                "operationId": "storeProduct",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "imagedirectory",
                                    "product_price"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "text"
                                    },
                                    "imagedirectory": {
                                        "type": "file"
                                    },
                                    "features": {
                                        "type": "text"
                                    },
                                    "product_price": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns product added message",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Error page",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/product/edit-product/[product:id]": {
            "post": {
                "tags": [
                    "Edit product"
                ],
                "summary": "Edit existing product",
                "description": "Change or edit a product. Especially the product price. Product ID must be passed in the url. [For the admin]",
                "operationId": "edit_product",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "text"
                                    },
                                    "image": {
                                        "type": "file"
                                    },
                                    "description": {
                                        "type": "text"
                                    },
                                    "price": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns product updated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Error page",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/product/delete-produc/[product:id]": {
            "post": {
                "tags": [
                    "Delete product"
                ],
                "summary": "Delete existing product",
                "description": "Remove a product from the system. Product ID must be passed in the url. [For the admin]",
                "operationId": "delete_product",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "product_id"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns product updated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Error page",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    }
}